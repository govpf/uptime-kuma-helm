{{- if not .Values.useDeploy -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "uptime-kuma.fullname" . }}
  labels:
    {{- include "uptime-kuma.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "uptime-kuma.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "uptime-kuma.selectorLabels" . | nindent 6 }}
      {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 6 }}
      {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "uptime-kuma.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      enableServiceLinks: false
      serviceAccountName: {{ include "uptime-kuma.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.podEnv }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          {{ if .Values.persistence.enabled -}}
          volumeMounts:
            - mountPath: /app/data
              name: storage
          {{ end }}
          livenessProbe:
            exec:
              command:
                - node
                - extra/healthcheck.js
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds}}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds}}
          readinessProbe:
            httpGet:
              path: /
              port: 3001
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or (eq .Values.persistence.enabled true) (eq .Values.extraVolumeMounts) }}
          volumeMounts:
            - mountPath: /app/data
              name: storage
            {{- with .Values.extraVolumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{ end }}
          {{ end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled}}
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: {{ .Values.persistence.accessModes }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- end }}
{{- end -}}
